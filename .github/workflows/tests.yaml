name: Tests

on:
    push:
        branches: [ master ]
        paths-ignore:
            - README.md
    pull_request:
        branches: [ master ]
        paths-ignore:
            - README.md

jobs:

    php:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                php: [7.3, 7.4]
                prefer: ["--prefer-lowest", ""]

        steps:
            - uses: actions/checkout@v2

            - name: PHP - Switch
              run: sudo update-alternatives --set php /usr/bin/php${{ matrix.php }}

            - name: Composer - Get Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - uses: actions/cache@v1
              id: cache-composer
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: composer-php.${{ matrix.php }}-prefer.${{ matrix.prefer }}-${{ github.sha }}
                  restore-keys: composer-php.${{ matrix.php }}-prefer.${{ matrix.prefer }}-

            - name: Composer - Create cache directory
              run: mkdir -p /home/runner/.composer/cache
              if: steps.cache-composer.outputs.cache-hit != 'true'

            - name: Composer - Self Update
              run: sudo composer self-update

            - name: Composer - Validate composer.json and composer.lock
              run: composer validate --strict

            - name: Composer - Github Auth
              run: composer config -g github-oauth.github.com ${{ github.token }}

            - name: Composer - Update dependencies
              run: composer update ${{ matrix.prefer }} --no-progress --no-scripts

            - name: ECS - Run
              run: if [ -f ruleset/easy-coding-standard.yml ]; then vendor/bin/ecs check src/ tests/Behat/ --no-progress-bar -c ruleset/easy-coding-standard.yml ; else echo Ecs ruleset file does not exist, skipping step ; fi

            - name: PHPStan - Run
              run: if [ -f ruleset/phpstan.neon ]; then vendor/bin/phpstan analyse -c ruleset/phpstan.neon src/ ; else echo PHPStan ruleset file does not exist, skipping step ; fi

            - name: PHPSpec - Run
              run: if [ -f phpspec.yml.dist ]; then vendor/bin/phpspec run ; else echo PHPSpec config file does not exist, skipping step ; fi

            - name: GrumPHP - Run
              run: if [ -f grumphp.yml ]; then vendor/bin/grumphp run ; else echo Grumphp config file does not exist, skipping step ; fi

    sylius:
        runs-on: ubuntu-latest
        name: Sylius ${{ matrix.sylius }} PHP ${{ matrix.php }}
        strategy:
            fail-fast: false
            matrix:
                php: [7.3, 7.4]
                sylius: ['~1.7.0', '~1.8.0', 'dev-master']

        env:
            APP_ENV: test
            package-name: synolia/sylius-scheduler-command-plugin

        steps:
            - name: PHP - Switch
              run: sudo update-alternatives --set php /usr/bin/php${{ matrix.php }} && php -v

            - name: PHP - Setup timezone
              run: |
                  echo "date.timezone=UTC" >> /tmp/timezone.ini; \
                  sudo mv /tmp/timezone.ini /etc/php/${{ matrix.php }}/cli/conf.d/timezone.ini

            - uses: actions/checkout@v2
              with:
                  path: plugin

            - uses: actions/cache@v1
              id: cache-composer
              with:
                  path: /home/runner/.composer/cache
                  key: composer-php.${{ matrix.php }}-sylius.${{ matrix.sylius }}-${{ github.sha }}
                  restore-keys: composer-php.${{ matrix.php }}-sylius.${{ matrix.sylius }}-

            - name: Composer - Create cache directory
              run: mkdir -p /home/runner/.composer/cache
              if: steps.cache-composer.outputs.cache-hit != 'true'

            - name: Composer - Self Update
              run: |
                  mkdir -p /home/runner/.composer/
                  sudo composer self-update

            - name: Composer - Github Auth
              run: composer config -g github-oauth.github.com ${{ github.token }}

            - name: Composer - Install Sylius-Standard
              run: composer create-project --no-progress sylius/sylius-standard sylius "${{ matrix.sylius }}"

            - name: Sylius - Update dependencies # need to update sylius version
              working-directory: ./sylius
              run: composer update

            - name: Composer - Add path repository
              working-directory: ./sylius
              run: |
                  composer config repositories.plugin '{"type": "path", "url": "../plugin/"}'

            - name: Composer - Config
              working-directory: ./sylius
              run: |
                  composer config extra.symfony.allow-contrib true
                  composer config minimum-stability "dev"
                  composer config prefer-stable true

            - name: Composer - Install plugin
              working-directory: ./sylius
              run: composer require "${{ env.package-name }}:*" --prefer-source

            - name: Composer - Security Checker
              working-directory: ./sylius
              run: composer require sensiolabs/security-checker

            - name: Sylius - Copy migration
              working-directory: ./sylius
              run: cp ../plugin/src/Migrations/* src/Migrations

            - name: Sylius - Migration config
              working-directory: ./sylius
              run: |
                  echo '    migrations_paths:' >> config/packages/doctrine_migrations.yaml
                  echo '            'DoctrineMigrations': 'src/Migrations'' >> config/packages/doctrine_migrations.yaml
              if: matrix.sylius == '~1.8.0' || matrix.sylius == 'dev-master'

            - name: Sylius - Set database config
              working-directory: ./sylius
              run: |
                  echo 'DATABASE_URL=mysql://root:@127.0.0.1:3306/scheduler_command_plugin_%kernel.environment%?serverVersion=mariadb-10.4.11' >> .env

            - name: Sylius - Copy fixtures
              working-directory: ./sylius
              run: cp ../plugin/src/Resources/config/test/sylius_fixtures.yaml config/packages

            - name: Sylius - Install
              working-directory: ./sylius
              run: php bin/console sylius:install -n -s scheduler_command

            - name: Sylius - Yarn Build
              working-directory: ./sylius
              run: yarn install && yarn build

            - name: PHPUnit - Install PHPUnit 7.5
              working-directory: ./sylius
              run: wget https://phar.phpunit.de/phpunit-7.5.phar

            - name: PHPUnit - Configure
              working-directory: ./sylius
              run: |
                  cp vendor/${{ env.package-name }}/phpunit.xml.dist phpunit.xml
                  sed -i "s#tests/Application/config/bootstrap.php#config/bootstrap.php#g" phpunit.xml
                  sed -i "s#<directory>tests</directory>#<directory>./vendor/${{ env.package-name }}/tests/PHPUnit</directory>#g" phpunit.xml
                  sed -i "s#/tests/Application/AppKernel.php#src/Kernel.php#g" phpunit.xml

            - name: PHPunit - Run
              working-directory: ./sylius
              run: php phpunit-7.5.phar

            - name: Behat - Run webserver
              working-directory: ./sylius
              run: bin/console server:run 127.0.0.1:8080 --quiet > /dev/null 2>&1 &

            - name: Behat - Config Suite
              working-directory: ./sylius
              run: |
                  sed -i "s#vendor/sylius/sylius/src/Sylius/Behat/Resources/config/suites.yml#vendor/${{ env.package-name }}/tests/Behat/Resources/suites.yml#g" behat.yml.dist
                  sed -i "s#vendor/sylius/sylius/features#vendor/${{ env.package-name }}/features#g" behat.yml.dist
                  echo '    - { resource: "../vendor/${{ env.package-name }}/tests/Behat/Resources/services.yml" }' >> config/services_test.yaml

            - name: Behat - Run Behat tests
              working-directory: ./sylius
              # test behat without javascript (not functional on github actions)
              run: vendor/bin/behat --strict --no-interaction -f progress --tags="~@javascript" || vendor/bin/behat --strict -vvv --no-interaction --tags="~@javascript" --rerun

        services:
            mariadb:
                image: mariadb:10.4.11
                ports:
                    - 3306:3306
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: true
                options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
